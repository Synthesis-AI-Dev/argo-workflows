# This example demonstrates the use of a Synchronization lock on template execution. Synchronization lock limits
# the number of concurrent template execution across the workflows in the namespace which has same Synchronization lock.
# Synchronization limit value can be configured in configmap. Eg.:
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: my-config
# data:
#   template: "3"
#---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: semaphore-rebalance-
spec:
  activeDeadlineSeconds: 100000
  entrypoint: synchronization-tmpl-level-example
  serviceAccountName: argo
  arguments:
    parameters:
      - name: num
        value: 1
  podGC:
    strategy: OnPodSuccess
  templates:
  - name: synchronization-tmpl-level-example
    steps:
    - - name: generate
        template: gen-number-list    
    - - name: synchronization-acquire-lock
        template: acquire-lock
        arguments:
          parameters:
          - name: seconds
            value: "{{item}}"
        withParam: "{{steps.generate.outputs.result}}"

  - name: gen-number-list
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import json
        import sys
        json.dump([i for i in range(0, {{workflow.parameters.num}})], sys.stdout)
  - name: acquire-lock
    synchronization:
      semaphore:
        configMapKeyRef:
          name: scale-config
          key: test-scale
        rebalanceKey: "user-key-2"
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["sleep 240; echo acquired lock"]
